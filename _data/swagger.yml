swagger: '2.0'
info:
  version: 3.0.0
  title: Pol.is
  description: >-
    The Pol.is API for AI-powered conversations.
  termsOfService: 'https://pol.is/tos'
  contact:
    name: Pol.is API team
    email: foo@example.com
    url: 'https://pol.is'
  license:
    name: 'AGPL-3.0'
    url: 'https://opensource.org/licenses/AGPL-3.0'
host: polis-api-proxy.herokuapp.com
basePath: /api/v3
schemes:
  - https
consumes:
  - application/x-www-form-urlencoded
produces:
  - application/json
securityDefinitions:
  api_key:
    type: apiKey
    in: header
    name: Authorization
    description: >-
      API key must be requested from Pol.is team.
paths:
  /conversations:
    post:
      operationId: createConversation
      security:
        - api_key: []
      description: Create a new conversation
      tags:
        - Conversations
      parameters:
        - name: topic
          in: formData
          default: ''
          type: string
        - name: description
          in: formData
          default: ''
          type: string
        - name: short_url
          in: formData
          default: false
          type: boolean
          description: will return an easily typeable shortlink
        - name: strict_moderation
          in: formData
          type: boolean
      responses:
        200:
          description: ''
          schema:
            type: object
            example:
              conversation_id: '1234abc'
              url: 'pol.is/1234abc'
            properties:
              conversation_id:
                type: string
                description: ''
              url:
                type: string
                description: ''
    get:
      operationId: getAllConversations
      security:
        - api_key: []
      summary: Get listing of all conversations
      tags:
        - Conversations
      parameters:
        - name: user_id
          in: query
          type: integer
          description: Numeric ID of conversation owner/participant.
        - name: limit
          in: query
          type: integer
          description: Unlimited result set if not specified.
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/ConversationModel'
  /conversations/{conversation_id}:
    get:
      operationId: getConversation
      security:
        - api_key: []
      summary: Get all the data for one conversation
      description: >-
        If you don't supply a `user_id`, the URLs returned will not allow you
        to map the participants who follow the URLs back to users of your
        system.
      tags:
        - Conversations
      parameters:
        - name: conversation_id
          in: path
          type: string
          required: true
        - name: user_id
          in: query
          type: string
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ConversationModel'
  /conversations/{conversation_id}/participation:
    get:
      tags:
        - Conversations
      security:
        - api_key: []
      summary: Get participation data for one conversation
      parameters:
        - name: conversation_id
          in: path
          type: string
          required: true
      responses:
        200:
          description: Map of individual participant stats keyed to user index in conversation scope
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/ConversationParticipantStats'
  /metrics:
    post:
      tags:
        - Metrics
      description: ''
      responses:
        default:
          description: ''
  /nextComment:
    get:
      tags:
        - Comments
      description: ''
      responses:
        default:
          description: ''
  /conversations/{conversation_id}/participants:
    get:
      security:
        - api_key: []
      description: Get all the data for conversation participants
      tags:
        - Conversations
      parameters:
        - name: conversation_id
          in: path
          type: string
          required: true
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ConversationParticipants'
  /votes:
    post:
      security:
        - api_key: []
      consumes:
        - application/json
      description: Submit vote data.
      tags:
        - Votes
      parameters:
        - name: body
          in: body
          description: Vote object that needs to be added.
          required: true
          schema:
            $ref: '#/definitions/VoteRequestBody'
      responses:
        200:
          description: ''
          schema:
            type: object
            properties:
              currentPid:
                type: integer
  /comments/famous:
    get:
      tags:
        - Comments
      responses:
        200:
          description: ''
          schema:
            type: object
            additionalProperties:
              $ref: '#/definitions/FamousVoterModel'
  /conversations/{conversation_id}/math/pca2:
    get:
      tags:
        - Conversations
      parameters:
        - name: conversation_id
          in: path
          type: string
          required: true
        - name: lastVoteTimestamp
          in: query
          type: integer
          format: int64
          description: Milliseconds since Unix epoch.
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/PCA2Response'
  /conversations/{conversation_id}/comments:
    get:
      tags:
        - Conversations
      security:
        - api_key: []
      parameters:
        - name: conversation_id
          in: path
          type: string
          required: true
        - name: include_social
          default: false
          in: query
          type: boolean
        - name: gid
          in: query
          type: integer
        - name: moderation
          in: query
          type: boolean
          description: ''
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/CommentModel'
    post:
      tags:
        - Comments
      consumes:
        - application/json
      security:
        - api_key: []
      parameters:
        - name: body
          in: body
          description: Comment object that needs to be added.
          required: true
          schema:
            $ref: '#/definitions/CommentRequestBody'
      responses:
        200:
          description: ''
          schema:
            type: object
            properties:
              tid:
                description: Topic ID?
                type: integer
              CurrentPid:
                type: integer
  /conversations/{conversation_id}/conversationStats:
    get:
      tags:
        - Conversations
      security:
        - api_key: []
      parameters:
        - name: conversation_id
          in: path
          type: string
          required: true
      responses:
        200:
          description: ''
          schema:
            type: object
            properties:
              _id:
                type: string
              zid:
                description: Conversation ID
                type: integer
              lastVoteTimestamp:
                type: integer
                format: int64
                description: Timestamp of last vote in conversation. Milliseconds since Unix epoch.
              ptptstats:
                $ref: '#/definitions/PTPTStatsVectors'
            example:
              _id: 583fe36e7d5d2ee98915160e
              zid: 15169
              lastVoteTimestamp: 1480582081755
              ptptstats:
                pid: [9, 10, 11]
                gid: [0, 0, 1]
                n-votes: [21, 27, 27]
                centricness: [-0.5159909872007928, -1.3150581183585088, 0.3327595737808212]
                coreness: [-0.11622667139125253, 0.3186507192911382, 0.2658691164608967]
                extremeness: [-0.18028159265559968, 1.071078390338353, -0.9979297374105403]
definitions:
  CommentModel:
    type: object
    properties:
      created:
        type: integer
        format: int64
      is_seed:
        type: boolean
      quote_src_url:
        type: string
        x-nullable: true
      social:
        # TODO: File issue to ask about using consistent FB/TW models
        type: object
      tid:
        description: Topic ID?
        type: integer
      tweet_id:
        type: integer
        x-nullable: true
      txt:
        type: string
  CommentRequestBody:
    type: object
    properties:
      agid:
        type: integer
      conversation_id:
        type: string
      pid:
        type: string
        enum: ['mypid']
      txt:
        type: string
      vote:
        type: integer
        enum: [-1, 0, 1]
  VoteRequestBody:
    type: object
    description: A vote object
    properties:
      agid:
        type: integer
      conversation_id:
        type: string
      pid:
        type: string
        enum: ['mypid']
      tid:
        description: Topic ID?
        type: integer
      vote:
        type: integer
        enum: [-1, 0, 1]
  FamousVoterModel:
    type: object
    properties:
      bid:
        type: integer
        default: 0
      facebook:
        type: object
        properties:
          fb_link:
            type: string
          fb_name:
            type: string
          fb_picture:
            type: string
          fb_user_id:
            type: integer
          verified:
            type: boolean
      fb__location:
        x-nullable: true
      isSelf:
        type: boolean
      pid:
        type: integer
        default: 0
      priority:
        type: integer
        maximum: 1000
      twitter:
        type: object
        properties:
          follower_count:
            type: integer
          location:
            type: string
          name:
            type: string
          profile_image_url_https:
            type: string
          screen_name:
            type: string
          twitter_user_id:
            type: integer
          verified:
            type: boolean
      votes: {}
  MetricsPayload:
    type: object
    description: Payload delivered to the metrics endpoint.
    properties:
      clientTimestamp:
        type: integer
        format: int64
      durs:
        type: array
        items:
          type: integer
      times:
        type: array
        items:
          type: integer
          format: int64
      types:
        type: array
        items:
          type: integer
  PCA2Response:
    type: object
    description: ''
    properties:
      _id:
        type: string
        description: ''
      base-clusters:
        type: object
        description: ''
      consensus:
        type: object
        description: ''
      group-clusters:
        type: array
        items:
          type: object
      group-votes:
        type: object
        description: ''
      in-conv:
        type: array
        items:
          type: integer
      lastModTimestamp:
        type: integer
        format: int64
        description: Milliseconds since Unix epoch.
      lastVoteTimestamp:
        type: integer
        format: int64
        description: Milliseconds since Unix epoch.
      n:
        type: integer
        description: ''
      n-cmts:
        type: integer
        description: ''
      pca:
        type: object
        description: ''
      repness:
        type: object
        description: ''
      user-vote-counts:
        type: array
        items:
          type: array
          items:
            type: integer
      votes-base:
        type: object
        description: ''
  PTPTStatsVectors:
    type: object
    description: Data vectors. (Think of them as columns.)
    properties:
      pid:
        type: array
        items:
          description: Participant ID
          type: integer
      gid:
        type: array
        items:
          description: Group ID
          type: integer
      n-votes:
        type: array
        items:
          description: Count of votes cast by the participant
          type: integer
      centricness:
        type: array
        items:
          description: >-
            Metric representing how "central" a participant's views are in scope of CONVERSATION. Higher numbers are more centric.
          type: number
          format: float
          maximum: 1
      coreness:
        type: array
        items:
          description: >-
            Metric representing how "central" a participant's views are in scope of GROUP. Higher numbers are more centric.
          type: number
          format: float
          maximum: 1
      extremeness:
        type: array
        items:
          description: >-
            Metric representing how extreme a participant's views are in scope of GROUP. (This is to say, these participants are the furthest away from the center of the conversation in the direction of the group in question, and therefore represent the most extreme version of the views of a given group; these are the ideologues.) Max value is undefined, but probably less than 2.
          type: number
          format: float
  ConversationModel:
    type: object
    properties:
      topic:
        type: string
        description: 'Conversation title.'
      description:
        type: string
        description: >-
          Conversation description shown above interactive portion. May contain
          markdown formatting.
      is_anon:
        type: boolean
      is_active:
        type: boolean
      is_public:
        type: boolean
      email_domain:
        type: string
        x-nullable: true
      owner:
        type: integer
      participant_count:
        type: integer
      created:
        type: integer
        format: int64
        description: Milliseconds since Unix epoch.
      strict_moderation:
        type: boolean
      profanity_filter:
        type: boolean
      spam_filter:
        type: boolean
      context:
        x-nullable: true
      modified:
        type: integer
        format: int64
        description: Milliseconds since Unix epoch.
      owner_sees_participation_stats:
        type: boolean
      course_id:
        x-nullable: true
      lti_users_only:
        type: boolean
      link_url:
        type: string
        x-nullable: true
      upvotes:
        type: integer
      parent_url:
        type: string
        x-nullable: true
      vis_type:
        type: integer
      write_type:
        type: integer
      bgcolor:
        type: string
        x-nullable: true
      help_type:
        type: integer
      socialbtn_type:
        type: integer
      style_btn:
        x-nullable: true
      auth_needed_to_vote:
        type: boolean
      auth_needed_to_write:
        type: boolean
      auth_opt_fb:
        type: boolean
      auth_opt_tw:
        type: boolean
      auth_opt_allow_3rdparty:
        type: boolean
      help_bgcolor:
        x-nullable: true
      help_color:
        x-nullable: true
      is_data_open:
        type: boolean
      is_slack:
        type: boolean
      site_id:
        type: string
      auth_opt_fb_computed:
        type: boolean
      auth_opt_tw_computed:
        type: boolean
      ownername:
        type: string
      is_mod:
        type: boolean
      is_owner:
        type: boolean
      pp:
        type: boolean
      url:
        type: string
      mod_url:
        type: string
      conversation_id:
        type: string
  ConversationParticipantStats:
    type: object
    properties:
      votes:
        description: Vote count for individual participant
        type: integer
      comments:
        description: Comment count for individual participant
        type: integer
  ConversationParticipants:
    type: object
    properties:
      created:
        type: integer
        format: int64
        description: Milliseconds since Unix epoch.
      last_interaction:
        type: integer
        format: int64
        description: Milliseconds since Unix epoch.
      last_notified:
        type: integer
        format: int64
        description: Milliseconds since Unix epoch.
      mod:
        type: integer
      pid:
        description: Participant ID within this conversation context. Often corresponds to index in vectors.
        type: integer
      subscribed:
        type: integer
      uid:
        type: integer
      vote_count:
        type: integer
      zid:
        description: Conversation ID
        type: integer
