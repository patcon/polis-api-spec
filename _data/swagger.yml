swagger: '2.0'
info:
  version: 3.0.0
  title: Pol.is
  description: >-
    The Pol.is API for AI-powered conversations.
  termsOfService: 'https://pol.is/tos'
  contact:
    name: Pol.is API team
    email: foo@example.com
    url: 'https://pol.is'
  license:
    name: 'AGPL-3.0'
    url: 'https://opensource.org/licenses/AGPL-3.0'
host: api.pol.is
basePath: /api/v3
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  basicAuth:
    type: basic
    description: API key as user name. Password should be left blank.
paths:
  /conversations:
    post:
      security:
       - basicAuth: []
      description: Create a new conversation
      tags:
        - Conversations
      parameters:
        - name: topic
          in: formData
          default: ''
          type: string
        - name: description
          in: formData
          default: ''
          type: string
        - name: short_url
          in: formData
          default: false
          type: boolean
          description: will return an easily typeable shortlink
        - name: strict_moderation
          in: formData
          type: boolean
      responses:
        200:
          description: ''
          schema:
            type: object
            example:
              conversation_id: '1234abc'
              url: 'pol.is/1234abc'
            properties:
              conversation_id:
                type: string
                description: ''
              url:
                type: string
                description: ''
    get:
      security:
        - basicAuth: []
      description: Get all the data for one conversation
      tags:
        - Conversations
      parameters:
        - name: conversation_id
          in: query
          type: string
          required: true
        - name: user_id
          in: query
          type: string
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Conversation'
  /participants:
    get:
      security:
        - basicAuth: []
      description: Get all the data for conversation participants
      tags:
        - Participants
      parameters:
        - name: conversation_id
          in: query
          type: string
          required: true
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ConversationParticipants'
  /votes:
    post: {}
  /math/pca2:
    get: {}
  /ptptStats:
    get:
      parameters:
        - name: conversation_id
          in: query
          type: string
          required: true
      responses:
        200:
          description: ''
          schema:
            type: object
            properties:
              zid:
                description: Conversation ID
                type: integer
              lastVoteTimestamp:
                type: string
                format: date-time
                description: Timestamp of last vote in conversation.
              ptptstats:
                $ref: '#/definitions/PTPTStatsVectors'
definitions:
  PTPTStatsVectors:
    type: object
    description: Data vectors. (Think of them as columns.)
    properties:
      pid:
        type: array
        items:
          description: Participant ID
          type: integer
      gid:
        type: array
        items:
          description: Group ID
          type: integer
      n-votes:
        type: array
        items:
          description: Count of votes cast by the participant
          type: integer
      centricness:
        type: array
        items:
          description: >-
          Metric representing how "central" a participant's views are in scope of CONVERSATION. Higher numbers are more centric.
          type: number
          format: float
          maximum: 1
      coreness:
        type: array
        items:
          description: >-
          Metric representing how "central" a participant's views are in scope of GROUP. Higher numbers are more centric.
          type: number
          format: float
          maximum: 1
      extremeness:
        type: array
        items:
          description: >-
          Metric representing how extreme a participant's views are in scope of GROUP. (This is to say, these participants are the furthest away from the center of the conversation in the direction of the group in question, and therefore represent the most extreme version of the views of a given group; these are the ideologues.) Max value is undefined, but probably less than 2.
          type: number
          format: float
  Conversation:
    type: object
    properties:
      auth_needed_to_vote:
        type: boolean
      auth_needed_to_write:
        type: boolean
      auth_opt_allow_3rdparty:
        type: boolean
      auth_opt_fb:
        type: boolean
      auth_opt_fb_computed:
        type: boolean
      auth_opt_tw:
        type: boolean
      auth_opt_tw_computed:
        type: boolean
      topic:
        type: string
        description: ''
      description:
        type: string
        description: ''
      created:
        type: string
        format: date-time
      strict_moderation:
        type: boolean
      profanity_filter:
        type: boolean
      spam_filter:
        type: boolean
      modified:
        type: string
        format: date-time
      conversation_id:
        type: string
      is_owner:
        type: boolean
      url:
        type: string
  ConversationParticipants:
    type: object
    properties:
      created:
        type: string
        format: date-time
      last_interaction:
        type: string
        format: date-time
      last_notified:
        type: string
        format: date-time
      mod:
        type: integer
      pid:
        description: Participant ID within this conversation context. Often corresponds to index in vectors.
        type: integer
      subscribed:
        type: integer
      uid:
        type: integer
      vote_count:
        type: integer
      zid:
        description: Conversation ID
        type: integer
